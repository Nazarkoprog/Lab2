"**                      ЛАБОРАТОРНА РОБОТА 2**                   Тема: СТРУКТУРИ КЕРУВАННЯ**  Завдання до лабораторної роботи:*     1. Випробуйте наведені нижче приклади, збережіть отримані результати.*     2. Виконайте запропоновані завдання, прокоментуйте їхнє виконання.*     3. Сформулюйте висновки щодо структур керування Smalltalk.*=============================================================================="" ------ ПОРІВНЯННЯ ОБ'ЄКТІВ""{ Виокремте кожен з наведених нижче рядів коду і виконайте <Print it> }"    3 < 4 .    #(1 2 3 4) = #(1 2 3 4).    #(1 2 3 4) == #(1 2 3 4).    (#(1 2 3 4)at:2) == (#(1 2 3 4)at:2).    'hello' <= 'goodbye'.    5 = (2 + 3).     20 factorial between:1e16 and:1e20 .    (2@12)<(100@120).    $a isUppercase.     ('hello' at: 1) isVowel.    7 odd.    56 = 7 * 8    'Bye!' at:2 isVowel."{ Які ще об'єкти можна порівнювати? Яким чином? Знайдіть відповідні методи }{ за допомогою SystemBrowser'а. Наведіть приклади використання.             } ------ ТЕСТУВАННЯ ОБ'ЄКТІВ{ Отримайте результати для наведених рядків коду. Запропонуйте власні приклади. }"    Smalltalk class.    Boolean superclass.    20 isKindOf: Number.    20 isMemberOf: SmallInteger.    20 factorial isMemberOf: SmallInteger.    Number inheritsFrom: Magnitude.    Number respondsTo: #new.    20 respondsTo: #max:.    3/5 respondsTo: #+.    $A respondsTo: #between:and:. "------ ЛОГІЧНІ ВИРАЗИ{ Виконайте наступні приклади за допомогою <Print it> }"    5 factorial > 100 & 7 odd.    (250 sqrt between: 16 and: 15) | (5 sin > 1).    (195 \\ 3 = 0 | (195 \\ 7 = 0)) & (1/3 between:0 and:0.5)." * * * ""{ Виконайте як нероздільний блок }"       aChar := 65 asCharacter.    aChar >= $0 and: [ aChar <= $9 ]." * * * ""{ Відкрийте попередньо вікно Transcript. Виконайте як нероздільний блок }"       aChar := 65 asCharacter.    aChar >= $0 and: [ Transcript show: aChar printString; cr. aChar <= $9 ]." * * * ""{ Виконайте як нероздільний блок }"       anInteger := (UIManager default request: 'Input number of a year' initialAnswer: '2000' title: 'Is it leap year?') asInteger.    ^anInteger\\4 = 0        and:[anInteger\\100 > 0 or:[anInteger \\ 400 = 0]]." ------ ГАЛУЖЕННЯ{ Виконайте наступні приклади як нероздільний блок за допомогою <Print it> }"" * * * "    3 < 4        ifTrue:  ['The true block executed']        ifFalse: ['The false block executed']." * * * "    a := 5 squared.  Transcript show:'  a=',a printString; cr.    b := 4 factorial.Transcript show:'  b=',b printString; cr.    a < b        ifTrue:  [max := b]        ifFalse: [max := a].     Transcript show:'max=',max printString; cr.     ^max.                                 " * * * "    answer := (UIManager default confirm: 'Continue ?')                     ifTrue: [ 'Yes' ]  ifFalse: [ 'No' ].    ^answer." * * * "    a:=UIManager default request: 'Input first number:'.    a notNil ifTrue: [ a := a asNumber ]             ifFalse: [ UIManager default inform: 'Process stoped'. ^nil ].    b:=(UIManager default request: 'Input second number, please:') asNumber.    c:=UIManager defaultchooseFrom: #('circle' 'oval' 'square' 'rectangle' 'triangle') values: #(5 10 15 20 25)lines: #() message: 'And now third one! Choose a shape'.    max:= a>b ifTrue: [ a>c ifTrue:[a] ifFalse:[c]]              ifFalse:[ b>c ifTrue:[b] ifFalse:[c]].    ^'max(',a printString,',',b printString,',',c printString,')=',max printString." ------ ПОВТОРЕННЯ (ЦИКЛИ){ Виконайте приклади за допомогою <Print it> } " " Обчислення n! різними способами (не вбудованим методом) ""| n f |"    n:=(UIManager default request:'Input a nonegative integer') asInteger.    n < 0 ifTrue: [n := n negated ].    f := 1.    n timesRepeat: [ f := f*n. n := n - 1 ].    ^f ." * * * ""| n f |"    n:=(UIManager default request:'Input a nonegative integer') asInteger.    n < 0 ifTrue: [n := n negated ].    f := 1.    1 to: n do: [ :i | f := f * i ].    ^f ." * * * ""| n f |"    n:=(UIManager default request:'Input a nonegative integer') asInteger.    f := 1.    [ n > 1 ] whileTrue: [ f := f*n. n := n - 1 ].    ^f." * * * Сума гармонійного ряду ""| n s i |"    n:=(UIManager default request:'Input a number (<=10)' initialAnswer: '2') asNumber.    s:=0. i:=0.    [ s > n ] whileFalse: [ i:=i+1. s:=1.0/i+s ].    ^i." * * *  Ще одна цікава сума ""| sum |"     sum := 0.     1/2 to: 1 by: 1/8 do: [ :i |          sum := sum + i ].     ^sum.          " * * *  Ряд Маклорена для f(x) = sin x "  " 0.5 sin = 4.79425539e-1 ""| x s k y d |"    x:=0.5. y:=x*x negated. k:=2.    d:=x. s:=x.    [ d abs > 1e-5 ] whileTrue:    [ d:=d*y/k/(k+1). s:=s+d. k:=k+2 ].    ^s.  " * * *  Обчислення значення числа, з якого починається рядок ""| string index answer c |"      string := '1234 is the number'.      answer := 0.      index := 1.      string size timesRepeat: [           c := string at: index.           (c < $0 or: [ c > $9 ] )               ifTrue: [^answer].           answer := answer * 10               + c asciiValue - $0 asciiValue.           index := index + 1].     ^answer.                               " * * *  Перетворення рядка літер " "| string index c |"    string := String withAll: 'Now is THE time'.    index := 1.    string size timesRepeat: [         c := string at: index.         string             at: index             put:                 (c isVowel                     ifTrue: [ c asUppercase ]                     ifFalse: [ c asLowercase ] ).         index := index + 1 ].    ^string."{ Виконайте наступні приклади за допомогою <Do it> }"" * * *  Копіювання файла "" Вважається, що папка з лабораторними називається Labs і вкладена в папку Pharo ""| path input output |"     path := FileSystem workingDirectory asPath parent parent pathString, '/Labs/'.     path := path collect: [ :aChar | aChar == $/ ifTrue: [ $\ ] ifFalse: [ aChar ] ] from: 2 to: path size.     input := File openForReadFileNamed: path, 'Pharo-9_Lab2.txt'.     output := File openForWriteFileNamed: path, 'CopyPharoLab2.txt'.     [input atEnd]          whileFalse: [output nextPut: input next].     input close.     output close."{ Екземплярами яких класів є створені в цьому прикладі об'єкти input, output ? } ------ ІТЕРАТОРИ{ Ітератор - метод перебору та опрацювання елементів колекції.     }{ Дію ітераторів продемонструємо на прикладі масиву. Use <Print it> }"" * * * "    Transcript cr.    #(2 4 8 16 32) do: [:x | x printOn: Transcript. Transcript tab].    Transcript show:' '; cr." * * * ""| m a |"    a := #(3 7 5 0 2).    m:=a at: 1.    a do: [ :x | m := m max: x ].    ^m." * * * "    #(0 2 4 6) collect: [ :x | x*x ]" * * * "    #(1 2 3 4 5 6 7 8 9) select: [ :x | x even ]" * * * "    #(1 2 3 4 5 6 7 8 9) reject: [ :x | x even ]" * * * "    #(1 2 4 8 16 32 64) detect: [ :x | x > 10 ]" * * * "    #(1 2 4 8 16 32 64) includes: 6 squared" * * * "    #(1 2 3 4 5) inject:0 into: [ :s :x | s+x ]    #(1 2 3 4 5) inject:1 into: [ :f :x | f*x ]    #(1 2 3 4 5) inject:0 into: [ :m :x | m max:x ]    #(1 2 3 4 5) inject:0 into: [ :m :x | m min:x ]"{   Що робить кожен з ітераторів?   Які ще є ітератори в протоколі  } { класу Collection? Наведіть власні приклади використання ітераторів }"